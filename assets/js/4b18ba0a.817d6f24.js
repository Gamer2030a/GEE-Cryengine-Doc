"use strict";(self.webpackChunkgee_cryengine_DOC=self.webpackChunkgee_cryengine_DOC||[]).push([[2765],{6606:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>C,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var o=t(5893),r=t(1151);const i={sidebar_position:4},c="Component Overview / Template",a={id:"5.7/C++ API/Component/ComponentTemplate",title:"Component Overview / Template",description:"Replace the Base Component name with you're own name.",source:"@site/docs/5.7/C++ API/Component/ComponentTemplate.md",sourceDirName:"5.7/C++ API/Component",slug:"/5.7/C++ API/Component/ComponentTemplate",permalink:"/GEE-Cryengine-Doc/docs/5.7/C++ API/Component/ComponentTemplate",draft:!1,unlisted:!1,editUrl:"https://github.com/Gamer2030a/GEE-Cryengine-Doc/tree/main/docs/5.7/C++ API/Component/ComponentTemplate.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Retrive Component",permalink:"/GEE-Cryengine-Doc/docs/5.7/C++ API/Component/RetriveComponent"},next:{title:"IEntityComponent",permalink:"/GEE-Cryengine-Doc/docs/category/ientitycomponent"}},s={},p=[];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"component-overview--template",children:"Component Overview / Template"}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"Replace the Base Component name with you're own name."})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="Template Component.h"',children:'#pragma once\r\nclass BaseComponent : public IEntityComponent\r\n{\r\npublic:\r\n\tBaseComponent() {}\r\n\t~BaseComponent() {}\r\n\r\n\tstatic void ReflectType(Schematyc::CTypeDesc<BaseComponent>& desc)\r\n\t{\r\n\t\tdesc.SetGUID("{C5B5E10B-3CAB-4099-BC35-3AEFE903AEF0}"_cry_guid);\r\n\t\tdesc.SetLabel("BaseComponent");\r\n\t\tdesc.SetDescription("A New BaseComponent");\r\n\t\tdesc.SetEditorCategory("Internal");\r\n\t}\r\n  virtual void Initialize();\r\n};\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="Template Component.CPP"',children:'#include "StdAfx.h"\r\n#include "Component.h"\r\n#include <CrySchematyc/Env/IEnvRegistrar.h>\r\n#include <CrySchematyc/Env/Elements/EnvComponent.h>\r\n#include <CryCore/StaticInstanceList.h>\r\n\r\nnamespace\r\n{\r\n#include "StdAfx.h"\r\n#include "Component.h"\r\n#include <CrySchematyc/Env/IEnvRegistrar.h>\r\n#include <CrySchematyc/Env/Elements/EnvComponent.h>\r\n#include <CryCore/StaticInstanceList.h>\r\n\r\nnamespace\r\n{\r\n\tstatic void RegisterBaseComponent(Schematyc::IEnvRegistrar& registrar)\r\n\t{\r\n\t\tSchematyc::CEnvRegistrationScope scope = registrar.Scope(IEntity::GetEntityScopeGUID());\r\n\t\t{\r\n\t\t\tSchematyc::CEnvRegistrationScope componentScope = scope.Register(SCHEMATYC_MAKE_ENV_COMPONENT(BaseComponent));\r\n\t\t\t{\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tCRY_STATIC_AUTO_REGISTER_FUNCTION(&RegisterBaseComponent);\r\n}\r\nvoid BaseComponent::Initialize()\r\n{\r\n\r\n}\n'})})]})}function C(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>c});var o=t(7294);const r={},i=o.createContext(r);function c(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);