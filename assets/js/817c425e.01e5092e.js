"use strict";(self.webpackChunkgee_cryengine_DOC=self.webpackChunkgee_cryengine_DOC||[]).push([[3431],{7991:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var o=t(5893),r=t(1151);t(893);const i={sidebar_position:2},c="Bind Action",a={id:"5.7/C++ API/InputSystem/BindAction",title:"Bind Action",description:"for registering an input key we use two functions: RegisterAction and BindAction",source:"@site/docs/5.7/C++ API/InputSystem/BindAction.md",sourceDirName:"5.7/C++ API/InputSystem",slug:"/5.7/C++ API/InputSystem/BindAction",permalink:"/GEE-Cryengine-Doc/docs/5.7/C++ API/InputSystem/BindAction",draft:!1,unlisted:!1,editUrl:"https://github.com/Gamer2030a/GEE-Cryengine-Doc/tree/main/docs/5.7/C++ API/InputSystem/BindAction.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Input System",permalink:"/GEE-Cryengine-Doc/docs/category/input-system"},next:{title:"Register Action",permalink:"/GEE-Cryengine-Doc/docs/5.7/C++ API/InputSystem/RegisterAction"}},s={},d=[];function u(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"bind-action",children:"Bind Action"}),"\n",(0,o.jsx)(n.p,{children:"for registering an input key we use two functions: RegisterAction and BindAction"}),"\n",(0,o.jsx)(n.p,{children:"used to log comments"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="Engine Function"',children:"virtual void BindAction(Schematyc::CSharedString groupName, Schematyc::CSharedString name, EActionInputDevice device, EKeyId keyId, bool bOnPress = true, bool bOnRelease = true, bool bOnHold = true);\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="Example"',children:'m_pInputComponent->BindAction("player", "interact", eAID_KeyboardMouse, eKI_E);\n'})}),"\n",(0,o.jsx)(n.p,{children:"Other binds"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="Engine Functions"',children:"virtual void BindKeyboardAction(Schematyc::CSharedString groupName, Schematyc::CSharedString name, EKeyboardInputId keyId, bool bOnPress = true, bool bOnRelease = true, bool bOnHold = true);\r\nvirtual void BindMouseAction(Schematyc::CSharedString groupName, Schematyc::CSharedString name, EMouseInputId keyId, bool bOnPress = true, bool bOnRelease = true, bool bOnHold = true);\r\nvirtual void BindXboxAction(Schematyc::CSharedString groupName, Schematyc::CSharedString name, EXboxInputId keyId, bool bOnPress = true, bool bOnRelease = true, bool bOnHold = true);\r\nvirtual void BindPS4Action(Schematyc::CSharedString groupName, Schematyc::CSharedString name, EPS4InputId keyId, bool bOnPress = true, bool bOnRelease = true, bool bOnHold = true);\r\nvirtual void BindAction(Schematyc::CSharedString groupName, Schematyc::CSharedString name, EActionInputDevice device, EKeyId keyId, bool bOnPress = true, bool bOnRelease = true, bool bOnHold = true);\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="Example"',children:'m_pInputComponent->BindXboxAction("player", "interact", static_cast<Cry::DefaultComponents::CInputComponent::EXboxInputId>(eKI_XI_X));\n'})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},893:(e,n,t)=>{t.d(n,{Z:()=>r});t(7294);var o=t(5893);function r(e){let{children:n,color:t}=e;return(0,o.jsx)("span",{style:{backgroundColor:t,borderRadius:"4px",color:"#fff",padding:"0.2rem 0.5rem",fontWeight:"bold"},children:n})}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>c});var o=t(7294);const r={},i=o.createContext(r);function c(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);